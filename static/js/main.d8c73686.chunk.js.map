{"version":3,"sources":["reportWebVitals.ts","Components/Header.tsx","Components/Config/Styles.tsx","Components/Pages/Home.tsx","Components/Pages/About.tsx","Components/Pages/Posts.tsx","Components/Pages/Archive.tsx","Components/Footer.tsx","Components/Pages/Projects.tsx","Components/Config/Theme.tsx","Data.ts","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BannerContainer","styled","div","CoverImage","img","UserInfo","props","theme","text","background","heading","DesktopPages","background_secondary","text_secondary","MobilePages","hover","SiteLogo","h1","HamButton","button","DarkThemeToggle","Header","state","showHamburger","toggleHamburger","setState","style","display","flexDirection","src","this","darkModeOn","profile","coverImageDark","coverImage","alt","userImage","to","name","bio","id","onClick","toggleDarkMode","Component","StyledPage","motion","StyledPost","FewLines","Heading","SimpleDiv","StyledButton","Post","pathname","post","textDecoration","title","date","className","children","content","allowDangerousHtml","Home","postList","posts","map","x","index","type","MobileView","DesktopView","About","user","page","Posts","directPost","path","location","split","length","flex","Archive","showShortPosts","visiblePosts","toggleShortPosts","console","log","renderPosts","componentDidMount","StyledFooter","footer","Footer","StyledContainer","StyledBox","Projects","href","lightTheme","body","darkTheme","about","GlobalStyle","createGlobalStyle","Container","App","fallback","basename","process","initial","exitBeforeEnter","exact","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8c73686.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { user } from \"./Config/Types\";\ninterface Props {\n  profile: user;\n  darkModeOn: boolean;\n  toggleDarkMode: any;\n}\ninterface State {\n  showHamburger: boolean;\n}\n\nconst BannerContainer = styled.div`\n  height: 300px;\n  display: flex;\n  @media all and (max-width: 768px) {\n    display: none;\n  }\n`;\nconst CoverImage = styled.img`\n  width: 70%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst UserInfo = styled.div`\n  float: right;\n\n  width: 30%;\n  height: 100%;\n  color: ${(props) => `${props.theme.text}`};\n  @media all and (max-width: 768px) {\n    height: 300px;\n  }\n  div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    background-color: ${(props) => `${props.theme.background}`};\n    padding: 20px;\n    height: 100%;\n\n    a {\n      text-decoration: none;\n    }\n    h2 {\n      color: ${(props) => `${props.theme.heading}`};\n    }\n  }\n  img {\n    width: 150px;\n    height: auto;\n  }\n`;\n\nconst DesktopPages = styled.div`\n  background-color: ${(props) => `${props.theme.background_secondary}`};\n  color: white;\n  padding: 10px;\n  position: relative;\n  min-height: 78px;\n  a {\n    color: ${(props) => `${props.theme.text_secondary}`};\n    font-size: 24px;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #d81e5b;\n  }\n  ul {\n    display: flex;\n    li {\n      padding: 10px;\n      margin: 0 10px 0 10px;\n      list-style: none;\n    }\n  }\n  @media all and (max-width: 650px) {\n    display: none;\n  }\n`;\n\nconst MobilePages = styled.div`\n  background-color: ${(props) => `${props.theme.background_secondary}`};\n  color: ${(props) => `${props.theme.text}`};\n  z-index: 2;\n  padding: 10px;\n  position: relative;\n  min-height: 78px;\n  a {\n    color: ${(props) => `${props.theme.text_secondary}`};\n    font-size: 24px;\n    text-decoration: none;\n    display: block;\n  }\n  a:hover {\n    color: ${(props) => `${props.theme.hover}`};\n  }\n  ul {\n    display: flex;\n    li {\n      display: block;\n      padding: 10px;\n      margin: 0 10px 0 10px;\n      list-style: none;\n    }\n  }\n  @media all and (max-width: 650px) {\n    ul {\n      display: flex;\n      flex-direction: column;\n    }\n  }\n  @media all and (max-width: 480px) {\n    height: 100%;\n  }\n  @media all and (min-width: 650px) {\n    display: none;\n  }\n`;\nconst SiteLogo = styled.h1`\n  text-align: center;\n  margin-top: 10px;\n  @media all and (max-width: 380px) {\n    font-size: 24px;\n  }\n`;\n\nconst HamButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 50px;\n  height: 50px;\n  color: #fafaff;\n  border: none;\n  background-color: ${(props) => `${props.theme.background_secondary}`};\n  border: solid 1px ${(props) => `${props.theme.text_secondary}`};\n\n  &:hover {\n    color: ${(props) => `${props.theme.hover}`};\n  }\n  &:focus {\n    outline: none;\n  }\n  h1 {\n    padding: 5px;\n  }\n  @media all and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nconst DarkThemeToggle = styled.button`\n  background-color: ${(props) => `${props.theme.background_secondary}`};\n  border: solid 1px ${(props) => `${props.theme.text_secondary}`};\n  color: ${(props) => `${props.theme.text_secondary}`};\n  font-size: 12px;\n  margin-top: 5px;\n  padding: 5px;\n\n  &:hover {\n    color: ${(props) => `${props.theme.hover}`};\n  }\n  @media all and (min-width: 768px) {\n    position: absolute;\n    right: 20px;\n  }\n`;\n\nexport default class Header extends Component<Props, State> {\n  state = {\n    showHamburger: false,\n  };\n  toggleHamburger = () => {\n    this.setState({ showHamburger: !this.state.showHamburger }, () => {});\n  };\n\n  render() {\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <BannerContainer>\n          <CoverImage\n            src={\n              this.props.darkModeOn\n                ? this.props.profile.coverImageDark\n                : this.props.profile.coverImage\n            }\n            alt=\"\"\n          />\n          <UserInfo>\n            <div>\n              <img src={this.props.profile.userImage} alt=\"\" />\n\n              <Link to=\"/about\">\n                <h2>{this.props.profile.name}</h2>\n              </Link>\n              <p>{this.props.profile.bio}</p>\n            </div>\n          </UserInfo>\n        </BannerContainer>\n\n        <MobilePages>\n          <HamButton id=\"hamburger\" onClick={this.toggleHamburger}>\n            {!this.state.showHamburger ? <h1>&#10005;</h1> : <h1>&#9776;</h1>}\n          </HamButton>\n          <ul style={this.state.showHamburger ? { display: \"none\" } : {}}>\n            <li>\n              <NavLink to=\"/\">Home</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/archive\">Archive</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/projects\">Projects</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/about\">About</NavLink>\n            </li>\n            <li>\n              <DarkThemeToggle onClick={this.props.toggleDarkMode}>\n                {this.props.darkModeOn ? \"Light Mode\" : \"Dark Mode\"}\n              </DarkThemeToggle>\n            </li>\n          </ul>\n\n          {!this.state.showHamburger ? null : (\n            <SiteLogo>\n              <NavLink to=\"/\">jayash.xyz</NavLink>\n            </SiteLogo>\n          )}\n        </MobilePages>\n        <DesktopPages>\n          <ul>\n            <li>\n              <NavLink to=\"/\">Home</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/archive\">Archive</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/projects\">Projects</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/about\">About</NavLink>\n            </li>\n            <li>\n              {\" \"}\n              <DarkThemeToggle onClick={this.props.toggleDarkMode}>\n                {this.props.darkModeOn ? \"Light Mode\" : \"Dark Mode\"}\n              </DarkThemeToggle>\n            </li>\n          </ul>\n        </DesktopPages>\n      </div>\n    );\n  }\n}\n","import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\n/** Fills full page\n *\n * Currently used by About, Archive and Projects I guess\n */\nconst StyledPage = styled(motion.div)`\n  background-color: ${(props) => `${props.theme.background}`};\n  //flex: 1; //fils remaining space in the middle between header and footer\n  margin: 10px 0 10px 0;\n  padding: 20px;\n  height: 100%;\n  border-radius: 3px;\n  box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.27);\n  p {\n    color: ${(props) => `${props.theme.text}`};\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${(props) => `${props.theme.heading}`};\n  }\n  a {\n    text-decoration: none;\n  }\n\n  h2:hover {\n    color: ${(props) => `${props.theme.text}`};\n  }\n`;\n\nconst StyledPost = styled(motion.div)`\n  background-color: ${(props) => `${props.theme.background}`};\n  height: 100%;\n  margin: 10px 0 10px 0;\n  padding: 20px;\n  border-radius: 3px;\n  box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.27);\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: ${(props) => `${props.theme.heading}`};\n  }\n  img {\n    width: 200px;\n  }\n  p {\n    color: ${(props) => `${props.theme.text}`};\n  }\n  ul {\n    margin-left: 20px;\n    li::marker {\n      color: ${(props) => `${props.theme.text}`};\n    }\n    li {\n      color: ${(props) => `${props.theme.text}`};\n    }\n  }\n  a {\n    color: ${(props) => `${props.theme.heading}`};\n  }\n`;\n\nconst FewLines = styled(motion.div)`\n  background-color: ${(props) => `${props.theme.background}`};\n  height: 100%;\n  position: relative;\n  margin: 10px 0 10px 0;\n  padding: 20px;\n  padding-top: 40px;\n  border-radius: 3px;\n  box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.27);\n  font-size: 16px;\n  p {\n    color: ${(props) => `${props.theme.text}`};\n  }\n  .date-content {\n    opacity: 50%;\n    position: absolute;\n    top: 10px;\n    right: 20px;\n  }\n`;\n\nconst Heading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px dotted ${(props) => `${props.theme.text}`};\n  margin-bottom: 10px;\n  h1 {\n    color: ${(props) => `${props.theme.heading}`};\n  }\n  p {\n    color: ${(props) => `${props.theme.text}`};\n  }\n  .date-content {\n    opacity: 50%;\n  }\n`;\n\nconst SimpleDiv = styled(motion.div)`\n  flex: 1;\n`;\n\nconst StyledButton = styled.button`\n  background-color: ${(props) => `${props.theme.background}`};\n  border: solid 1px ${(props) => `${props.theme.text}`};\n  color: ${(props) => `${props.theme.text}`};\n  font-size: 12px;\n  margin-top: 5px;\n  padding: 5px;\n\n  &:hover {\n    color: ${(props) => `${props.theme.hover}`};\n  }\n  @media all and (min-width: 768px) {\n    position: absolute;\n    right: 20px;\n  }\n`;\n\nexport { StyledPage, StyledPost, Heading, SimpleDiv, FewLines, StyledButton };\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport { StyledPost, Heading, SimpleDiv, FewLines } from \"../Config/Styles\";\nimport { post, posts } from \"../Config/Types\";\n\ninterface ActivityProps {\n  posts: posts;\n}\ntype PostProps = {\n  post: post;\n};\ninterface State {}\n\nclass Post extends Component<PostProps, State> {\n  state = {};\n\n  render() {\n    return (\n      <StyledPost>\n        <Link\n          to={{\n            pathname: `/posts/${this.props.post.id}`,\n          }}\n          style={{ textDecoration: \"none\" }}\n        >\n          <Heading>\n            <h1>{this.props.post.title}</h1>\n            {this.props.post.date ? (\n              <p className=\"date-content\">{this.props.post.date}</p>\n            ) : (\n              <p></p>\n            )}\n          </Heading>\n        </Link>\n        <ReactMarkdown\n          children={this.props.post.content}\n          allowDangerousHtml={true}\n        ></ReactMarkdown>\n      </StyledPost>\n    );\n  }\n}\n\nexport default class Home extends Component<ActivityProps, State> {\n  state = {};\n  /*   componentWillUnmount() {\n    console.log(\"unmounting\");\n  } */\n  postList = this.props.posts.map((x, index) => {\n    if (x.type === \"short\") {\n      return (\n        <FewLines key={index}>\n          <ReactMarkdown\n            children={x.content}\n            allowDangerousHtml={true}\n          ></ReactMarkdown>\n          <p className=\"date-content\">{x.date}</p>\n        </FewLines>\n      );\n    } else {\n      return <Post key={index} post={x} />;\n    }\n  });\n\n  render() {\n    return <SimpleDiv>{this.postList}</SimpleDiv>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Heading, StyledPage, SimpleDiv } from \"../Config/Styles\";\nimport styled from \"styled-components\";\nimport { user, page } from \"../Config/Types\";\n\ninterface Props {\n  page: page;\n  user: user;\n}\n\ninterface State {}\n\nconst MobileView = styled.div`\n  display: none;\n  @media all and (max-width: 768px) {\n    display: block;\n  }\n`;\nconst DesktopView = styled.div`\n  display: none;\n  @media all and (min-width: 768px) {\n    display: block;\n  }\n`;\n\nconst UserInfo = styled.div`\n  width: 50%;\n  height: 100%;\n  display: inline;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: ${(props) => `${props.theme.background}`};\n    padding: 20px;\n    height: 100%;\n\n    a {\n      text-decoration: none;\n    }\n    h2 {\n      color: ${(props) => `${props.theme.heading}`};\n    }\n  }\n\n  img {\n    width: 150px;\n    height: auto;\n  }\n`;\nexport default class About extends Component<Props, State> {\n  state = {};\n\n  render() {\n    return (\n      <SimpleDiv>\n        <StyledPage>\n          <MobileView>\n            <UserInfo>\n              <div>\n                <img src={this.props.user.userImage} alt=\"\" />\n                <h2>{this.props.user.name}</h2>\n              </div>\n            </UserInfo>\n            <p>{this.props.page.content}</p>\n          </MobileView>\n          <DesktopView>\n            <Heading>\n              <h1>{this.props.page.title}</h1>\n            </Heading>\n            <p>{this.props.page.content}</p>\n          </DesktopView>\n        </StyledPage>\n      </SimpleDiv>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport ReactMarkdown from \"react-markdown\";\nimport { StyledPost, Heading, SimpleDiv } from \"../Config/Styles\";\nimport { post, posts } from \"../Config/Types\";\n\ninterface State {}\n// {(this.props.location.state as post).content}\n\ntype Props = {\n  posts: posts;\n};\n\nexport default class Posts extends Component<\n  Props & RouteComponentProps,\n  State\n> {\n  state = {};\n\n  directPost = this.props.posts.map(({ id, title, date, content }, index) => {\n    let path = this.props.location.pathname.split(\"/\");\n\n    if (id === path[path.length - 1]) {\n      return (\n        <SimpleDiv key={id}>\n          <StyledPost>\n            <Heading>\n              <h1>{title}</h1>\n              {date ? <p className=\"date-content\">{date}</p> : <p></p>}\n            </Heading>\n            <ReactMarkdown\n              children={content}\n              allowDangerousHtml={true}\n            ></ReactMarkdown>\n          </StyledPost>\n        </SimpleDiv>\n      );\n    } else return null;\n  });\n\n  render() {\n    if (this.props.location.state as post) {\n      return (\n        <SimpleDiv>\n          <StyledPost>\n            <Heading>\n              <h1>{(this.props.location.state as post).title}</h1>\n              {(this.props.location.state as post).date ? (\n                <p>{(this.props.location.state as post).date}</p>\n              ) : (\n                <p></p>\n              )}\n            </Heading>\n            <ReactMarkdown\n              children={(this.props.location.state as post).content}\n              allowDangerousHtml={true}\n            ></ReactMarkdown>\n          </StyledPost>\n        </SimpleDiv>\n      );\n    } else {\n      return <div style={{ flex: 1 }}>{this.directPost}</div>;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { StyledPage, Heading, SimpleDiv, StyledButton } from \"../Config/Styles\";\n\nimport { posts } from \"../Config/Types\";\n\ninterface Props {\n  posts: posts;\n}\ninterface State {\n  showShortPosts: boolean;\n  visiblePosts: any;\n}\n\nexport default class Archive extends Component<Props, State> {\n  state = {\n    showShortPosts: false,\n    visiblePosts: null,\n  };\n\n  toggleShortPosts = () => {\n    console.log(this.state);\n\n    this.setState(\n      {\n        showShortPosts: !this.state.showShortPosts,\n      },\n      () => {\n        this.renderPosts();\n      }\n    );\n  };\n\n  renderPosts = () => {\n    let visiblePosts = this.props.posts.map(\n      ({ id, title, date, type, content }, index) => {\n        if (type === \"short\" && this.state.showShortPosts) {\n          return (\n            <div key={index}>\n              <Heading>\n                <p>{content}</p>\n                <p className=\"date-content\">{date}</p>\n              </Heading>\n              <br />\n            </div>\n          );\n        } else if (type === \"short\" && !this.state.showShortPosts) {\n          return null;\n        } else {\n          return (\n            <div key={index}>\n              <Link\n                to={{\n                  pathname: `/posts/${id}`,\n                  state: { id, title, date, type, content },\n                }}\n              >\n                <Heading>\n                  <h2>{title}</h2>\n                  <p className=\"date-content\">{date}</p>\n                </Heading>\n              </Link>\n              <br />\n            </div>\n          );\n        }\n      }\n    );\n    this.setState({ visiblePosts: visiblePosts });\n  };\n  componentDidMount = () => {\n    this.renderPosts();\n  };\n\n  render() {\n    return (\n      <SimpleDiv>\n        <StyledPage>\n          <Heading>\n            <h1>Archive</h1>\n            <StyledButton onClick={this.toggleShortPosts}>\n              {this.state.showShortPosts\n                ? \"Hide Short Posts\"\n                : \"Show Short Posts\"}\n            </StyledButton>\n          </Heading>\n          <br />\n          {this.state.visiblePosts}\n        </StyledPage>\n      </SimpleDiv>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {}\ninterface State {}\nconst StyledFooter = styled.footer`\n  margin-top: 20px;\n  min-height: 50px;\n  background-color: ${(props) => `${props.theme.background_secondary}`};\n  color: ${(props) => `${props.theme.text_secondary}`};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nexport default class Footer extends Component<Props, State> {\n  state = {};\n\n  render() {\n    return <StyledFooter>Made with love and no $$$ </StyledFooter>;\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Heading, StyledPage, SimpleDiv } from \"../Config/Styles\";\n\ninterface State {}\ninterface Props {}\n\nconst StyledContainer = styled.div`\n  //flex: 1; fils remaining space\n  display: flex;\n  flex-wrap: wrap;\n  margin: auto;\n  justify-content: flex-start;\n  @media all and (max-width: 600px) {\n    flex-wrap: nowrap;\n    flex-direction: column;\n  }\n`;\n\nconst StyledBox = styled.div`\n  //flex: 1; fils remaining space\n  margin: 10px 10px 20px 10px;\n  padding: 10px;\n  position: relative;\n  flex: 0 0 350px;\n  border-bottom: solid 1px ${(props) => `${props.theme.text}`};\n\n  div {\n    display: flex;\n    z-index: 1;\n    align-items: center;\n    justify-content: center;\n  }\n\n  img {\n    position: relative;\n    z-index: 1;\n    display: block;\n    max-width: 800px;\n    max-height: 800px;\n    width: 100%;\n    height: 100%;\n    margin-bottom: 20px;\n  }\n  @media all and (max-width: 480px) {\n    flex: 0 0 200px;\n  }\n  @media all and (min-width: 768px) {\n    border-bottom: none;\n    padding: 0px;\n    div p {\n      display: none;\n    }\n    div:hover p {\n      display: flex;\n      position: absolute;\n      top: 0px;\n      text-align: center;\n      z-index: 2;\n      margin: 10px;\n    }\n    div a {\n      color: black;\n      text-decoration: none;\n    }\n\n    div:hover img {\n      opacity: 0.1;\n    }\n  }\n`;\n\nexport default class Projects extends Component<Props, State> {\n  state = {};\n\n  render() {\n    return (\n      <SimpleDiv>\n        <StyledPage>\n          <Heading>\n            <h1>Projects</h1>\n          </Heading>\n          <StyledContainer>\n            <StyledBox>\n              <div>\n                <a href=\"https://jayash.xyz/todo/\">\n                  <img\n                    className=\"project-image\"\n                    src=\"../images/todolist.png\"\n                    alt=\"\"\n                  />\n                  <p>\n                    To Do List, uses local strage to keep the items persistent\n                    until the cache is cleared.\n                  </p>\n                </a>\n              </div>\n            </StyledBox>\n            <StyledBox>\n              <div>\n                <a href=\"https://jayash.xyz/calculator/\">\n                  <img\n                    className=\"project-image\"\n                    src=\"../images/calculator.png\"\n                    alt=\"\"\n                  />\n                  <p>A simple calculator made with React.</p>\n                </a>\n              </div>\n            </StyledBox>\n            <StyledBox>\n              <div>\n                <a href=\"https://jayash.xyz/pomodoro\">\n                  <img\n                    className=\"project-image\"\n                    src=\"../images/pomodoro.png\"\n                    alt=\"\"\n                  />\n                  <p>A simple pomodoro timer made with React.</p>\n                </a>\n              </div>\n            </StyledBox>\n\n            <StyledBox>\n              <div>\n                <a href=\"https://jayash.xyz/drums/\">\n                  <img\n                    className=\"project-image\"\n                    src=\"../images/drums.png\"\n                    alt=\"\"\n                  />\n                  <p>A drumpad, made with React.</p>\n                </a>\n              </div>\n            </StyledBox>\n            <StyledBox>\n              <div>\n                <a href=\"https://jayash.xyz/cryptType/\">\n                  <img\n                    className=\"project-image\"\n                    src=\"../images/cryptType.png\"\n                    alt=\"\"\n                  />\n                  <p>Write while preventing others from snooping.</p>\n                </a>\n              </div>\n            </StyledBox>\n          </StyledContainer>\n        </StyledPage>\n      </SimpleDiv>\n    );\n  }\n}\n","const lightTheme = {\n  background: \"#fafaff\",\n  text: \"#2b303a\",\n  background_secondary: \"#2b303a\",\n  text_secondary: \"#fafaff\",\n  body: \"#58a4b0\",\n  heading: \"#d81e5b\",\n  hover: \"#58a4b0\",\n};\n\nconst darkTheme = {\n  background: \"#212121\",\n  text: \"#fafaff\",\n  background_secondary: \"#212121\",\n  text_secondary: \"#fafaff\",\n  body: \"#121212\",\n  heading: \"#d81e5b\",\n  hover: \"#d81e5b\",\n};\n\nexport type theme = typeof darkTheme;\n\nexport { lightTheme, darkTheme };\n","import { posts as postsType } from \"./Components/Config/Types\";\n\nexport const user = {\n  name: \"Jayash Raj Mudbhari\",\n  bio: \"A web developer I guess.\",\n  coverImage: \"../images/cover.jpg\",\n  coverImageDark: \"../images/cover_dark.jpg\",\n  userImage: \"../images/face.jpg\",\n};\nexport const about = {\n  id: \"test;\",\n  title: \"About\",\n  date: \"\",\n  content:\n    \"Hi, I am Jayash Raj Mudbhari. I am a self-taught web developer and this is my personal website.\",\n};\nexport const posts: postsType = [\n  {\n    id: \"107\",\n    title: \"\",\n    date: \"6th April, 2021\",\n    type: \"short\",\n    content: `Finally getting back to programming once more. Listening to radiohead these days.\n\n&nbsp;\n\n<iframe src=\"https://open.spotify.com/embed/track/4wajJ1o7jWIg62YqpkHC7S\" width=\"300\" height=\"80\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>`,\n  },\n  {\n    id: \"107\",\n    title: \"\",\n    date: \"26th Feb, 2021\",\n    type: \"short\",\n    content: `Working on: I have built a web scraper that fetches ASX data, will be doing some processing on the weekend. I might have to learn D3 to visualize the data.`,\n  },\n  {\n    id: \"106\",\n    title: \"Todo App: Features\",\n    date: \"25th Feb, 2021\",\n    type: \"post\",\n    content: `\n  So I built [this Todo App](/todo) a few weeks ago. But I haven't really showcased all the interesting things that it can do. So this post describes some of it's features.  \n    \n  &nbsp;\n\n  I wanted to make the app more customizable and that which could be easily done on the phone as well. Hence instead of using # or $ or any symbols, I just chose x as it doesnt require the user to change keyboard modes to make changes to the app.  \n    \n  &nbsp;\n\n  ## Change the background color\n  You can customize the background color of the app by typing \\`x color <color-name>\\`\n\n    \n  &nbsp;\n\n  ## Change the title of the list\n  Type \\`x title Features to Implement\\` and the title will become \"Features to Implement\". Anything after keyword \\`title\\` will become the title. Even emojis. For example, for screenshot 1, I simply typed \\`\"x title #\"\\`. You can also make it blank using \\`\"x title\"\\`\n     \n  &nbsp;\n\n  ## Change the title color\n  Type \\`x title color <color>\\` and the color of title will be changed.\n  \n    \n  &nbsp;\n\n  ## Change the item color\n  Type \\`x item color <item-background-color> <item-text-color> <close-button-color>\\` and the color of item will be changed. Example: \\`x item color grey black red\\`\n  \n  &nbsp;\n\n\n  ## Clear the list\n  Type \\`x clear \\` to simply clear all the items. Or type \\`x reset \\` to reset the colors and title to default. \n  \n  &nbsp;\n\n  ## Favicon generation using HTML Canvas\n  Whenever you change the title or the background color, the website changes the favicon with first letter of your title and the color you have set. Unfortunately, this does not work with emojis.\n\n    \n  &nbsp;\n\n  ## Save it as an app on your phone \n  I haven't tested it on an Android phone yet but you can save the page to your home screen with your custom title and color to make it feel as if it were a native app. \n  \n  &nbsp;\n  \n  You will have to make your changes before you press \"Add to Home Screen\" button on Safari, after which any changes you make will not be reflected on favicon (favicon is cached then onwards). You will need to close the tab and try again. Once the app is saved to home screen you will need to make the changes once more.\n  \n  &nbsp;\n  \n  Also when you have multiple copies of the app, each copy will have its own local storage hence no two apps will have the same list.\n  \n  &nbsp;\n\n  ## Screenshots\n  ![Adding to Home Screen](/images/todo_screenshot_0.png)\n    ![Gold Background with Emoji Title](/images/todo_screenshot_1.png)\n    ![Multiple Copies of the App](/images/todo_screenshot_2.png)\n  \n  &nbsp;\n  \n  # Todo \n\n*  Drag and rearrange\n* Ability to save multiple lists\n\n\n  \n  \n    `,\n  },\n  {\n    id: \"104\",\n    title: \"\",\n    date: \"3rd Jan, 2021\",\n    type: \"short\",\n    content: \"Working on: making this website more social media like.\",\n  },\n  {\n    id: \"102\",\n    title: \"Features of this site\",\n    date: \"1st January 2021\",\n    type: \"post\",\n    content: `This site is technically a single page app, hosted on github pages. It is made with React, react router, TypeScript and Styled Components. \n      \n    \n  &nbsp;\n\n# Todo \n\n*  [x] Mobile website //Done on 13th/14th Feb 20202  \n*  [ ] Ordering of posts, proper date sheme,   \n*  [x] projects page\n*  [ ] photos page\n*  [x] Markdown renderer\n   \n      `,\n  },\n];\n","import React, { Component, Suspense } from \"react\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Components/Pages/Home\";\nimport About from \"./Components/Pages/About\";\nimport Posts from \"./Components/Pages/Posts\";\nimport Archive from \"./Components/Pages/Archive\";\nimport Footer from \"./Components/Footer\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport Projects from \"./Components/Pages/Projects\";\nimport { lightTheme, darkTheme } from \"./Components/Config/Theme\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { user, about, posts } from \"./Data\";\nimport { theme } from \"./Components/Config/Theme\";\n\nconst GlobalStyle = createGlobalStyle<{ theme: theme }>`\n  * {\n  margin: 0px;\n  padding: 0px;\n  box-sizing: border-box;\n}\nbody {\n  background-color: ${(props) => `${props.theme.body}`};\n  font-family: \"Lucida Sans\", \"Lucida Sans Regular\", \"Lucida Grande\",\n    \"Lucida Sans Unicode\", Geneva, Verdana, sans-serif;\n}\n`;\n\ninterface Props {}\ninterface State {}\n\nconst Container = styled.div`\n  width: 85vw;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  @media all and (max-width: 480px) {\n    width: 90vw;\n  }\n`;\n\nexport default class App extends Component<Props, State> {\n  state = {\n    darkModeOn: false,\n  };\n  toggleDarkMode = () => {\n    console.log(this.state);\n    this.setState({\n      darkModeOn: !this.state.darkModeOn,\n    });\n  };\n  render() {\n    return (\n      <ThemeProvider theme={this.state.darkModeOn ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Suspense fallback={<p>Loading ...</p>}>\n          <Container>\n            <HashRouter basename={process.env.PUBLIC_URL}>\n              {/*for github pages, as it doesnt support client side routing apparently*/}\n              <Header\n                profile={user}\n                toggleDarkMode={this.toggleDarkMode}\n                darkModeOn={this.state.darkModeOn}\n              />\n              <AnimatePresence initial={false} exitBeforeEnter>\n                <Switch>\n                  <Route\n                    exact\n                    path=\"/\"\n                    render={(props) => <Home {...props} posts={posts} />}\n                  />\n                  <Route\n                    path=\"/about\"\n                    render={(props) => (\n                      <About {...props} user={user} page={about} />\n                    )}\n                  />\n                  <Route\n                    path=\"/archive\"\n                    render={(props) => <Archive {...props} posts={posts} />}\n                  />\n                  <Route path=\"/projects\" component={Projects} />\n                  <Route\n                    path=\"/posts/:post_id\"\n                    render={(props) => <Posts {...props} posts={posts} />}\n                    //may seem confusing but for posts components pass posts array as posts props\n                  />\n                </Switch>\n              </AnimatePresence>\n            </HashRouter>\n\n            <Footer />\n          </Container>\n        </Suspense>\n      </ThemeProvider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <App />\n    </Container>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}